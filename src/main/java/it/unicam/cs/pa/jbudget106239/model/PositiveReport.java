/*
 * Copyright (c) 2020.
 * All rights reserved to Ludovico Latini. Program written entirely by Ludovico Latini for the PA1920 project, it is strictly forbidden to use this program for profit, but it can be redistributed for free in an updated version. If redistributed, the program must have the same copyright and Ludovico Latini must be mentioned.
 */

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package it.unicam.cs.pa.jbudget106239.model;

import java.io.*;
import java.util.*;

/**
 * Classe utile per gestire il report totale e positivo
 */
public class PositiveReport implements ReportInterface {
    ReadAndWrite readerAndWriter = new ReadAndWrite();
    private LinkedList<String> report = new LinkedList<>();
    private LinkedList<String> PositiveReport = new LinkedList<>();


    /**
     * Ritorna il report totale
     * @return ritorna una linkedlist
     */
    public LinkedList<String> getReport() throws IOException {
            readerAndWriter.readToFile(Account.path+File.separator+"report",report);
        return report;

    }

    public void setReport(LinkedList report) {
        this.report = report;
    }

    /**
     * Scrive il report totale
     * @param text testo da scrivere
     * @param money soldi da aggiungere
     */
    public void writeOnReport(String text, double money) throws SignException, IOException {
        if (money<0){
            throw new SignException(money);
        }
            readerAndWriter.writeToFile(text,money,Account.path+File.separator+"report");
            writeOnPositiveReport(text, money);
    }

    /**
     * Scrive il report positovo
     * @param text testo da scrivere
     * @param money soldi da aggiungere
     * @throws SignException Eccezioni del parametro money
     * @throws IOException Eccezioni del parametro money
     */
    public void writeOnPositiveReport(String text, double money) throws SignException, IOException {
        if (money<0){
            throw new SignException(money);
        }
            readerAndWriter.writeToFile(text,money,Account.path+File.separator+"positivereport");
    }

    /**
     * Ritorna il report positivo
     * @return ritorna una Linkedlist
     * @throws IOException Eccezione di Input Output
     */
    public LinkedList<String> getPositiveReport() throws IOException {
            readerAndWriter.readToFile(Account.path+File.separator+"positivereport",PositiveReport);
        return PositiveReport;
    }

    /**
     * Metodo utilizzato per eliminare il positive report
     * @param name nome del report da eliminare
     * @return true o false
     * @throws DelException Eccezione del parametro name
     */
        public boolean del (String name) throws DelException {
            boolean ver=readerAndWriter.deleteFile(Account.path+File.separator+name);
            if (!ver){
                throw new DelException();
            }
            return true;
        }
}
